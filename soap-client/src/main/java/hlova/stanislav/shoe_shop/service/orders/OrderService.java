
package hlova.stanislav.shoe_shop.service.orders;

import jakarta.jws.WebMethod;
import jakarta.jws.WebParam;
import jakarta.jws.WebResult;
import jakarta.jws.WebService;
import jakarta.jws.soap.SOAPBinding;
import jakarta.xml.bind.annotation.XmlSeeAlso;
import jakarta.xml.ws.Action;
import jakarta.xml.ws.FaultAction;
import jakarta.xml.ws.Holder;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 3.0.0
 * Generated source version: 3.0
 * 
 */
@WebService(name = "OrderService", targetNamespace = "http://stanislav.hlova/shoe-shop/service/orders")
@SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
@XmlSeeAlso({
    hlova.stanislav.shoe_shop.service.orders.ObjectFactory.class,
    hlova.stanislav.shoe_shop.ObjectFactory.class,
    hlova.stanislav.shoe_shop.orders.ObjectFactory.class,
    hlova.stanislav.shoe_shop.shoe.ObjectFactory.class
})
public interface OrderService {


    /**
     * 
     * @param clientToken
     * @param tokenExpiresAt
     * @param parameters
     * @return
     *     returns hlova.stanislav.shoe_shop.service.orders.FindByIdResponse
     * @throws ServiceException_Exception
     */
    @WebMethod
    @WebResult(name = "findByIdResponse", targetNamespace = "http://stanislav.hlova/shoe-shop/service/orders", partName = "result")
    @Action(input = "http://stanislav.hlova/shoe-shop/service/orders/OrderService/findByIdRequest", output = "http://stanislav.hlova/shoe-shop/service/orders/OrderService/findByIdResponse", fault = {
        @FaultAction(className = ServiceException_Exception.class, value = "http://stanislav.hlova/shoe-shop/service/orders/OrderService/findById/Fault/ServiceException")
    })
    public FindByIdResponse findById(
        @WebParam(name = "findById", targetNamespace = "http://stanislav.hlova/shoe-shop/service/orders", partName = "parameters")
        FindById parameters,
        @WebParam(name = "clientToken", targetNamespace = "http://stanislav.hlova/shoe-shop/service/orders", header = true, partName = "clientToken")
        String clientToken,
        @WebParam(name = "tokenExpiresAt", targetNamespace = "http://stanislav.hlova/shoe-shop/service/orders", header = true, mode = WebParam.Mode.OUT, partName = "tokenExpiresAt")
        Holder<String> tokenExpiresAt)
        throws ServiceException_Exception
    ;

    /**
     * 
     * @param clientToken
     * @param tokenExpiresAt
     * @param parameters
     * @return
     *     returns hlova.stanislav.shoe_shop.service.orders.AddResponse
     * @throws ServiceException_Exception
     */
    @WebMethod
    @WebResult(name = "addResponse", targetNamespace = "http://stanislav.hlova/shoe-shop/service/orders", partName = "result")
    @Action(input = "http://stanislav.hlova/shoe-shop/service/orders/OrderService/addRequest", output = "http://stanislav.hlova/shoe-shop/service/orders/OrderService/addResponse", fault = {
        @FaultAction(className = ServiceException_Exception.class, value = "http://stanislav.hlova/shoe-shop/service/orders/OrderService/add/Fault/ServiceException")
    })
    public AddResponse add(
        @WebParam(name = "add", targetNamespace = "http://stanislav.hlova/shoe-shop/service/orders", partName = "parameters")
        Add parameters,
        @WebParam(name = "clientToken", targetNamespace = "http://stanislav.hlova/shoe-shop/service/orders", header = true, partName = "clientToken")
        String clientToken,
        @WebParam(name = "tokenExpiresAt", targetNamespace = "http://stanislav.hlova/shoe-shop/service/orders", header = true, mode = WebParam.Mode.OUT, partName = "tokenExpiresAt")
        Holder<String> tokenExpiresAt)
        throws ServiceException_Exception
    ;

    /**
     * 
     * @param clientToken
     * @param tokenExpiresAt
     * @param parameters
     * @return
     *     returns hlova.stanislav.shoe_shop.service.orders.UpdateResponse
     * @throws ServiceException_Exception
     */
    @WebMethod
    @WebResult(name = "updateResponse", targetNamespace = "http://stanislav.hlova/shoe-shop/service/orders", partName = "result")
    @Action(input = "http://stanislav.hlova/shoe-shop/service/orders/OrderService/updateRequest", output = "http://stanislav.hlova/shoe-shop/service/orders/OrderService/updateResponse", fault = {
        @FaultAction(className = ServiceException_Exception.class, value = "http://stanislav.hlova/shoe-shop/service/orders/OrderService/update/Fault/ServiceException")
    })
    public UpdateResponse update(
        @WebParam(name = "update", targetNamespace = "http://stanislav.hlova/shoe-shop/service/orders", partName = "parameters")
        Update parameters,
        @WebParam(name = "clientToken", targetNamespace = "http://stanislav.hlova/shoe-shop/service/orders", header = true, partName = "clientToken")
        String clientToken,
        @WebParam(name = "tokenExpiresAt", targetNamespace = "http://stanislav.hlova/shoe-shop/service/orders", header = true, mode = WebParam.Mode.OUT, partName = "tokenExpiresAt")
        Holder<String> tokenExpiresAt)
        throws ServiceException_Exception
    ;

    /**
     * 
     * @param clientToken
     * @param tokenExpiresAt
     * @param parameters
     * @return
     *     returns hlova.stanislav.shoe_shop.service.orders.DeleteResponse
     * @throws ServiceException_Exception
     */
    @WebMethod
    @WebResult(name = "deleteResponse", targetNamespace = "http://stanislav.hlova/shoe-shop/service/orders", partName = "result")
    @Action(input = "http://stanislav.hlova/shoe-shop/service/orders/OrderService/deleteRequest", output = "http://stanislav.hlova/shoe-shop/service/orders/OrderService/deleteResponse", fault = {
        @FaultAction(className = ServiceException_Exception.class, value = "http://stanislav.hlova/shoe-shop/service/orders/OrderService/delete/Fault/ServiceException")
    })
    public DeleteResponse delete(
        @WebParam(name = "delete", targetNamespace = "http://stanislav.hlova/shoe-shop/service/orders", partName = "parameters")
        Delete parameters,
        @WebParam(name = "clientToken", targetNamespace = "http://stanislav.hlova/shoe-shop/service/orders", header = true, partName = "clientToken")
        String clientToken,
        @WebParam(name = "tokenExpiresAt", targetNamespace = "http://stanislav.hlova/shoe-shop/service/orders", header = true, mode = WebParam.Mode.OUT, partName = "tokenExpiresAt")
        Holder<String> tokenExpiresAt)
        throws ServiceException_Exception
    ;

    /**
     * 
     * @param clientToken
     * @param tokenExpiresAt
     * @param parameters
     * @return
     *     returns hlova.stanislav.shoe_shop.service.orders.FindAllResponse
     * @throws ServiceException_Exception
     */
    @WebMethod
    @WebResult(name = "findAllResponse", targetNamespace = "http://stanislav.hlova/shoe-shop/service/orders", partName = "result")
    @Action(input = "http://stanislav.hlova/shoe-shop/service/orders/OrderService/findAllRequest", output = "http://stanislav.hlova/shoe-shop/service/orders/OrderService/findAllResponse", fault = {
        @FaultAction(className = ServiceException_Exception.class, value = "http://stanislav.hlova/shoe-shop/service/orders/OrderService/findAll/Fault/ServiceException")
    })
    public FindAllResponse findAll(
        @WebParam(name = "findAll", targetNamespace = "http://stanislav.hlova/shoe-shop/service/orders", partName = "parameters")
        FindAll parameters,
        @WebParam(name = "clientToken", targetNamespace = "http://stanislav.hlova/shoe-shop/service/orders", header = true, partName = "clientToken")
        String clientToken,
        @WebParam(name = "tokenExpiresAt", targetNamespace = "http://stanislav.hlova/shoe-shop/service/orders", header = true, mode = WebParam.Mode.OUT, partName = "tokenExpiresAt")
        Holder<String> tokenExpiresAt)
        throws ServiceException_Exception
    ;

}
